# This file will contain the pseduocode used throughout this program.
# Name: Justin Shuck
# Copy Right(c) Justin Shuck


# Compliance Level 2

define print function that take a lower, increment and upper parameters
	While the lower is less than or equal to the upper
		print the lower
		add the increment to the lower
define a printf function that has functionality similar to that in C
	Print the line with the format requested

define a maxWidth function that takes a lower increment and upper parameters
	use a holder to hold the maxwidth of the sequence
	if the increment is 0 return the width as 0
	while lower is less than or equal to the upper
		check to see if the width of lower is bigger than the holder
		increment the lower with the increment variable
	return the max width

define a function that will verify if the input is a float or int
	try casting to an int
	return the argument if you can cast it to an int
	OTHERWISE try casting to a float
	return argument if you can cast it to a float
	OTHERWISE it was an invalid input. exit the program.

define a verify increment function to see if the increment is less than or equal to 0.
	check to see if its less than or equal to 0
		exit the program with an error message

define a printPad function that will pad the left hand side with a special character.
	while the lower is less than or equal to the upper
		print the lower using 'rjust' with the padding character and using the max width
		increment the lower variable with the increment

if there is a backslash for the -s/seperate argument
      if the string is a \n set it in the proper form
      if the string is a \t set it in the proper form
      if the string is a \a set it in the proper form
      if the string is a \f set it in the proper form
      if the string is a \r set it in the proper form
      if the string is a \v set it in the proper form
      if the string is a \\ set it in the proper form

create the implementation for the words function. 
      find the length of the given string
      from 0 to the word length
           create a string that has a space between each word
	   add the blank space to the word
      print the final string

if there are not the correct number of arguments OR invalid argument
    print error message
    exit the program



if there is a flag(i.e. -f,-s...)
	if there are 2 arguments:
		Print error message
		exit
	if there are 3 arguments [ --flag upper]
		if the flag is for --pad/-p
			exit the program with invalid argument number error
		Assign the upper and lower fields based on the [lower increment upper] format (will call default if not supplied by user)
		Determine if it is a float or int
			call the appropriate defaults (either float or int)
	if there are 4 arguments[ --flag lower upper] OR [--flag positional upper]
		if the flag is for --pad/-p
			check to see if the length of the pad is 1
				exit the program if the length of positional is greater than 1.
			assign the proper lower and increment flags.
		if the flag is for --format/-f
			assign the format type as the second argument.
			assign the proper lower and increment flags based on upper bound given.
		Otherwise Assign the upper and lower fields based on the [lower increment upper] format (will call default if not supplied by user)
                Determine if it is a float or int
                        assigns the proper defaults (either int defaults or float defaults)

	if there are 5 arguments (special cases)
		Assign the upper and lower fields based on the [lower increment upper] format (will call default if not supplied by user)
		if its a -f flag
			Assign the value of the format flag
		if its a -s flag
			Assign the value of the string flag
		if its a -w flag
			Assign the value of its lower, increment and upper fields
		if its a -p flag
	        	if the padding character is invalid(MUST BE 1)
                        	exit the program with an error
                        otherwise
                                assign the value of the lower and upper
				determine if the lower/upper is a float
					assigns the proper defaults (either int defaults or float defaults)
		if its a -P flag
			Assign the value of the lower and upper variable
			Determine if the lower/upper is a float
				assigns the proper defaults (either int defaults or float defaults)
	handle the only case that could have 6 arguments (-p 'pad char' lower inc upper])
		if its a -p flag
			if the padding character is invalid(MUST BE 1)
				exit the program with an error
			otherwise
				assign the value of the lower, increment and upper
		otherwise print an error saying that 'there are too many arguments' and exit.
			
if argument -f is there
	while the lower is less than or equal to the upper bound
		call printf to print the format requested
if argument -s is there 
	While the lower is less than or equal to the upper bound
		print the lower bound followed by the seperator
	exit the program
if argument -w is there
	While the lower is less than or equal to the upper bound
		print the strings so the width of each string is equal to max length
	exit the program
if arguemnt -v is there
	prints the version of sequ
	exit the program
if argument -W is there
	While the lower is less than or equal to the upper
		print the lower, (the comma will print on the same line)
		add the increment to the lower
	exit the program
if argument -p is there
	determine the max width of the sequence using maxWidth()
	call the printPad function with the parameters assigned
	exit the program
if argument -P is there
	determine the max Width of the sequence using maxWidth()
	call the printPad function with the parameters assigned. (pad char will be ' ' for -P flags)
	exit the program

if there are less than 2 arguments or greater than or equal to 5
	print error message
	exit the program

if there are no flags and the length of the arguments is 2.[sequ upper]
	assign the upper variable
	determine what type upper is
		assign the proper defaults for the upper (i.e. float or int.)

if the length of the arguments is greater than 3
	Assign the lower value
	if the length is 4 [sequ lower inc upper]
		assign the increment and upper variables
	otherwise
		use the defult increment and assign the upper variable
call the defualt print function
